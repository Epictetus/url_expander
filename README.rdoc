= url_expander

The idea is simple, One expander to expand them all. I've been working on an analytical tool for twitter.com and i wanted a way to expand all the shortened urls. Url_expander is a good start, it covers 34 services. I tried to make it as simple as possible to extend & add new services.

== Install

  gem install url_expander

== How to use

Download the config used to authenticate with some of the shortening services

  curl -s https://raw.github.com/gist/1086114/c5c401e811effc3e99ed37ae9503f267877d8e68/url_expander_credentials.yml -o ~/url_expander_credentials.yml

Require and Use
  require 'rubygems' # if ruby < 1.9
  require 'url_expander'
  UrlExpander::Client.expand('http://tinyurl.com/66sekq5')

=== Options

* :nested_shortening -- Nested shortening is turned on by default (:nested_shortening => true)
   UrlExpander::Client.expand("http://t.co/ZGEGdas")  => "http://www.blink182.com/upallnight/"
   UrlExpander::Client.expand("http://t.co/ZGEGdas", :nested_shortening => false)  => "http://bit.ly/oi029o"

* :limit -- If the nested_shortening is turned on, then :limit controls the max number of redirection allowed. Default value is 10
   UrlExpander::Client.expand('http://tinyurl.com/66sekq5', :limit => 4)

* :config_file -- Some services Require credentials to access the api (such as bitly). You need to provide YAML file with the access credentials. Default is "~/url_expander_credentials.yml". 
   UrlExpander::Client.expand('http://bit.ly/qpshuI', :config_file => '/Users/moski/url_expander_credentials.yml')


== Supported Services:

* 4sq.com
   UrlExpander::Client.expand("http://4sq.com/pQkuZk")
* bit.ly
   UrlExpander::Client.expand("http://bit.ly/qpshuI")
* j.mp
   UrlExpander::Client.expand("http://j.mp/qpshuI")
* budurl.com
   UrlExpander::Client.expand("http://budurl.com/EYOS2")
* cli.gs
   UrlExpander::Client.expand("http://cli.gs/2BAzKa")
* decenturl.com
   UrlExpander::Client.expand("http://decenturl.com/youtube/medieval")
   UrlExpander::Client.expand("http://youtube.decenturl.com/medieval")
* fxn.ws
   UrlExpander::Client.expand("http://fxn.ws/pBewvL")
* goo.gl
   UrlExpander::Client.expand("http://goo.gl/DRppM")
* is.gd
   UrlExpander::Client.expand("http://is.gd/wsJRhR")
* nyti.ms
   UrlExpander::Client.expand("http://nyti.ms/dzy2b7")
* tcrn.ch
   UrlExpander::Client.expand("http://tcrn.ch/oe50JN")
* xrl.us
   UrlExpander::Client.expand("http://xrl.us/bkz5iy")
* adjix.com
   UrlExpander::Client.expand("http://adjix.com/cm4m")







Services are divided into 3 categories:

* Provide an API for expanding
* Support 301 redirection
* Manual Scraping 


== Contributing to url_expander
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Moski. See LICENSE.txt for
further details.
